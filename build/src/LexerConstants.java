/* Generated By:JavaCC: Do not edit this line. LexerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LexerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CONST = 7;
  /** RegularExpression Id. */
  int TRUE = 8;
  /** RegularExpression Id. */
  int FALSE = 9;
  /** RegularExpression Id. */
  int CONSTR = 10;
  /** RegularExpression Id. */
  int THIS = 11;
  /** RegularExpression Id. */
  int FUNC = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int READ = 14;
  /** RegularExpression Id. */
  int WRITE = 15;
  /** RegularExpression Id. */
  int CLASS = 16;
  /** RegularExpression Id. */
  int PUBLIC = 17;
  /** RegularExpression Id. */
  int PRIVATE = 18;
  /** RegularExpression Id. */
  int IF = 19;
  /** RegularExpression Id. */
  int THEN = 20;
  /** RegularExpression Id. */
  int ELSE = 21;
  /** RegularExpression Id. */
  int WHILE = 22;
  /** RegularExpression Id. */
  int INT = 23;
  /** RegularExpression Id. */
  int ID = 24;
  /** RegularExpression Id. */
  int VARID = 25;
  /** RegularExpression Id. */
  int COMMA = 26;
  /** RegularExpression Id. */
  int ADD = 27;
  /** RegularExpression Id. */
  int INC = 28;
  /** RegularExpression Id. */
  int SUB = 29;
  /** RegularExpression Id. */
  int DEC = 30;
  /** RegularExpression Id. */
  int MUL = 31;
  /** RegularExpression Id. */
  int POW = 32;
  /** RegularExpression Id. */
  int DIV = 33;
  /** RegularExpression Id. */
  int MOD = 34;
  /** RegularExpression Id. */
  int LCB = 35;
  /** RegularExpression Id. */
  int RCB = 36;
  /** RegularExpression Id. */
  int LBR = 37;
  /** RegularExpression Id. */
  int RBR = 38;
  /** RegularExpression Id. */
  int EQ = 39;
  /** RegularExpression Id. */
  int NOT = 40;
  /** RegularExpression Id. */
  int NEQ = 41;
  /** RegularExpression Id. */
  int GT = 42;
  /** RegularExpression Id. */
  int LT = 43;
  /** RegularExpression Id. */
  int GOE = 44;
  /** RegularExpression Id. */
  int LOE = 45;
  /** RegularExpression Id. */
  int ARROW = 46;
  /** RegularExpression Id. */
  int COMPARISON = 47;
  /** RegularExpression Id. */
  int AND = 48;
  /** RegularExpression Id. */
  int OR = 49;
  /** RegularExpression Id. */
  int SC = 50;
  /** RegularExpression Id. */
  int STRLIT = 51;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<CONST>",
    "<TRUE>",
    "<FALSE>",
    "<CONSTR>",
    "<THIS>",
    "<FUNC>",
    "<RETURN>",
    "<READ>",
    "<WRITE>",
    "<CLASS>",
    "<PUBLIC>",
    "<PRIVATE>",
    "<IF>",
    "<THEN>",
    "<ELSE>",
    "<WHILE>",
    "<INT>",
    "<ID>",
    "<VARID>",
    "<COMMA>",
    "<ADD>",
    "<INC>",
    "<SUB>",
    "<DEC>",
    "<MUL>",
    "<POW>",
    "<DIV>",
    "<MOD>",
    "<LCB>",
    "<RCB>",
    "<LBR>",
    "<RBR>",
    "<EQ>",
    "<NOT>",
    "<NEQ>",
    "<GT>",
    "<LT>",
    "<GOE>",
    "<LOE>",
    "<ARROW>",
    "<COMPARISON>",
    "<AND>",
    "<OR>",
    "<SC>",
    "<STRLIT>",
  };

}
