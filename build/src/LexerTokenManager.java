/* Generated By:JavaCC: Do not edit this line. LexerTokenManager.java */
import java.util.List;
import java.util.ArrayList;
import java.io.FileNotFoundException;

/** Token Manager. */
public class LexerTokenManager implements LexerConstants
{
  int stringSize;

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      default :
         return jjMoveNfa_0(0, 0);
   }
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 125;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 24)
                        kind = 24;
                     jjCheckNAdd(20);
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 43)
                        kind = 43;
                     jjstateSet[jjnewStateCnt++] = 124;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjstateSet[jjnewStateCnt++] = 122;
                  }
                  else if (curChar == 33)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjstateSet[jjnewStateCnt++] = 120;
                  }
                  else if (curChar == 61)
                  {
                     if (kind > 39)
                        kind = 39;
                     jjstateSet[jjnewStateCnt++] = 118;
                  }
                  else if (curChar == 42)
                  {
                     if (kind > 31)
                        kind = 31;
                     jjstateSet[jjnewStateCnt++] = 116;
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 29)
                        kind = 29;
                     jjAddStates(0, 1);
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                     jjstateSet[jjnewStateCnt++] = 111;
                  }
                  else if (curChar == 47)
                     jjAddStates(2, 3);
                  else if (curChar == 34)
                     jjCheckNAddStates(4, 6);
                  else if (curChar == 59)
                  {
                     if (kind > 50)
                        kind = 50;
                  }
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 31;
                  else if (curChar == 41)
                  {
                     if (kind > 36)
                        kind = 36;
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 35)
                        kind = 35;
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 34)
                        kind = 34;
                  }
                  else if (curChar == 44)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  else if (curChar == 36)
                     jjCheckNAdd(22);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 23)
                        kind = 23;
                     jjCheckNAdd(19);
                  }
                  else if (curChar == 47)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  jjCheckNAdd(19);
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAdd(20);
                  break;
               case 21:
                  if (curChar == 36)
                     jjCheckNAdd(22);
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAdd(22);
                  break;
               case 23:
                  if (curChar == 44 && kind > 26)
                     kind = 26;
                  break;
               case 24:
                  if (curChar == 47 && kind > 33)
                     kind = 33;
                  break;
               case 25:
                  if (curChar == 37 && kind > 34)
                     kind = 34;
                  break;
               case 26:
                  if (curChar == 40 && kind > 35)
                     kind = 35;
                  break;
               case 27:
                  if (curChar == 41 && kind > 36)
                     kind = 36;
                  break;
               case 30:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if (curChar == 38 && kind > 48)
                     kind = 48;
                  break;
               case 34:
                  if (curChar == 59 && kind > 50)
                     kind = 50;
                  break;
               case 35:
               case 39:
                  if (curChar == 34)
                     jjCheckNAddStates(4, 6);
                  break;
               case 36:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(4, 6);
                  break;
               case 37:
                  if (curChar == 34 && kind > 51)
                     kind = 51;
                  break;
               case 41:
                  if (curChar == 47)
                     jjAddStates(2, 3);
                  break;
               case 42:
                  if (curChar != 47)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(43);
                  break;
               case 43:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(43);
                  break;
               case 44:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(45, 46);
                  break;
               case 45:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(45, 46);
                  break;
               case 46:
                  if (curChar == 42)
                     jjCheckNAddStates(7, 9);
                  break;
               case 47:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(48, 46);
                  break;
               case 48:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(48, 46);
                  break;
               case 49:
                  if (curChar == 47 && kind > 6)
                     kind = 6;
                  break;
               case 110:
                  if (curChar != 43)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 111:
                  if (curChar == 43 && kind > 28)
                     kind = 28;
                  break;
               case 112:
                  if (curChar != 45)
                     break;
                  if (kind > 29)
                     kind = 29;
                  jjAddStates(0, 1);
                  break;
               case 113:
                  if (curChar == 45 && kind > 30)
                     kind = 30;
                  break;
               case 114:
                  if (curChar == 62 && kind > 46)
                     kind = 46;
                  break;
               case 115:
                  if (curChar != 42)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if (curChar == 42 && kind > 32)
                     kind = 32;
                  break;
               case 117:
                  if (curChar != 61)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 118:
                  if (curChar == 61 && kind > 47)
                     kind = 47;
                  break;
               case 119:
                  if (curChar != 33)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 120:
                  if (curChar == 61 && kind > 41)
                     kind = 41;
                  break;
               case 121:
                  if (curChar != 62)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 122:
                  if (curChar == 61 && kind > 44)
                     kind = 44;
                  break;
               case 123:
                  if (curChar != 60)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 124:
                  if (curChar == 61 && kind > 45)
                     kind = 45;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 24)
                        kind = 24;
                     jjCheckNAdd(20);
                  }
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if (curChar == 125)
                  {
                     if (kind > 38)
                        kind = 38;
                  }
                  else if (curChar == 123)
                  {
                     if (kind > 37)
                        kind = 37;
                  }
                  if (curChar == 112)
                     jjAddStates(10, 11);
                  else if (curChar == 114)
                     jjAddStates(12, 13);
                  else if (curChar == 102)
                     jjAddStates(14, 15);
                  else if (curChar == 116)
                     jjAddStates(16, 18);
                  else if (curChar == 99)
                     jjAddStates(19, 21);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 6;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 3:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  if (curChar == 101 && kind > 15)
                     kind = 15;
                  break;
               case 5:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
                  if (curChar == 102 && kind > 19)
                     kind = 19;
                  break;
               case 7:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 8:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 10:
                  if (curChar == 101 && kind > 21)
                     kind = 21;
                  break;
               case 11:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 14:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 16:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 17:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if (curChar == 115 && kind > 22)
                     kind = 22;
                  break;
               case 20:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 24)
                     kind = 24;
                  jjCheckNAdd(20);
                  break;
               case 22:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 28:
                  if (curChar == 123 && kind > 37)
                     kind = 37;
                  break;
               case 29:
                  if (curChar == 125 && kind > 38)
                     kind = 38;
                  break;
               case 32:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if (curChar == 124 && kind > 49)
                     kind = 49;
                  break;
               case 36:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(4, 6);
                  break;
               case 38:
                  if (curChar == 92)
                     jjAddStates(22, 23);
                  break;
               case 40:
                  if (curChar == 92)
                     jjCheckNAddStates(4, 6);
                  break;
               case 43:
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  jjCheckNAddTwoStates(45, 46);
                  break;
               case 47:
               case 48:
                  jjCheckNAddTwoStates(48, 46);
                  break;
               case 50:
                  if (curChar == 99)
                     jjAddStates(19, 21);
                  break;
               case 51:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 52:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if (curChar == 116 && kind > 7)
                     kind = 7;
                  break;
               case 55:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 56:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 57:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 59:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 60:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if (curChar == 116 && kind > 10)
                     kind = 10;
                  break;
               case 63:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if (curChar == 115 && kind > 16)
                     kind = 16;
                  break;
               case 67:
                  if (curChar == 116)
                     jjAddStates(16, 18);
                  break;
               case 68:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 69:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 70:
                  if (curChar == 101 && kind > 8)
                     kind = 8;
                  break;
               case 71:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 72:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 73:
                  if (curChar == 115 && kind > 11)
                     kind = 11;
                  break;
               case 74:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 76:
                  if (curChar == 110 && kind > 20)
                     kind = 20;
                  break;
               case 77:
                  if (curChar == 102)
                     jjAddStates(14, 15);
                  break;
               case 78:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 79:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 80:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 81:
                  if (curChar == 101 && kind > 9)
                     kind = 9;
                  break;
               case 82:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 83:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 84:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 85:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 86:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 87:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 88:
                  if (curChar == 110 && kind > 12)
                     kind = 12;
                  break;
               case 89:
                  if (curChar == 114)
                     jjAddStates(12, 13);
                  break;
               case 90:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 91:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 92:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 94:
                  if (curChar == 110 && kind > 13)
                     kind = 13;
                  break;
               case 95:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 96:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 97:
                  if (curChar == 100 && kind > 14)
                     kind = 14;
                  break;
               case 98:
                  if (curChar == 112)
                     jjAddStates(10, 11);
                  break;
               case 99:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 100:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if (curChar == 99 && kind > 17)
                     kind = 17;
                  break;
               case 104:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 105:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 106:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 107:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 108:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 109:
                  if (curChar == 101 && kind > 18)
                     kind = 18;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 36:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(4, 6);
                  break;
               case 43:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(45, 46);
                  break;
               case 47:
               case 48:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddTwoStates(48, 46);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 125 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   113, 114, 42, 44, 36, 37, 38, 47, 46, 49, 99, 104, 90, 95, 78, 82, 
   68, 71, 74, 51, 55, 63, 39, 40, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xfffffffffff81L, 
};
static final long[] jjtoSkip = {
   0x7eL, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[125];
private final int[] jjstateSet = new int[250];
protected char curChar;
/** Constructor. */
public LexerTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public LexerTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 125; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
